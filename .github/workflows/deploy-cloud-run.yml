name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: inmobiliaria-api
  REGION: us-central1

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'
          cache: 'maven'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Run tests
        run: mvn clean test -B

      - name: Build application
        run: mvn package -DskipTests -B

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                       -t us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:latest .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --service-account=inmobiliaria-cloudrun@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars="SPRING_PROFILES_ACTIVE=prod" \
            --set-env-vars="GOOGLE_CLOUD_PROJECT=${{ env.GCP_PROJECT_ID }}" \
            --set-env-vars="GOOGLE_CLOUD_LOCATION=${{ env.REGION }}" \
            --set-env-vars="GOOGLE_GENAI_USE_VERTEXAI=true" \
            --set-env-vars="JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --set-env-vars="DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" \
            --memory=1Gi \
            --cpu=1 \
            --timeout=300s \
            --max-instances=10 \
            --min-instances=0 \
            --port=8080

      - name: Get service URL
        id: get-url
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region=${{ env.REGION }} \
            --format='value(status.url)')
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "Service deployed at: $SERVICE_URL"

      - name: Test deployment
        run: |
          echo "Waiting for service to become healthy..."
          sleep 45

          # Retry health check up to 6 times (90 seconds total)
          for i in {1..6}; do
            echo "Health check attempt $i/6..."
            if curl -f ${{ steps.get-url.outputs.SERVICE_URL }}/actuator/health; then
              echo "✓ Service is healthy!"
              exit 0
            fi
            if [ $i -lt 6 ]; then
              echo "Health check failed. Retrying in 15 seconds..."
              sleep 15
            fi
          done

          echo "✗ Service did not become healthy after 6 attempts"
          exit 1

      - name: Create deployment summary
        run: |
          echo "## Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: us-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/gcr.io/${{ env.SERVICE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ steps.get-url.outputs.SERVICE_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Health Check**: :white_check_mark: Passed" >> $GITHUB_STEP_SUMMARY
